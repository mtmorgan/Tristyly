% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Iteration.R
\name{Iteration}
\alias{Iteration}
\alias{iterate_deterministic}
\alias{iterate_stochastic}
\alias{replicate_to_dimorphism}
\alias{iterate_to_dimorphism}
\alias{iterate_to_monomorphism}
\title{Iteration}
\usage{
iterate_deterministic(population, generations, tolerance, G = Tristyly::G(),
  M = Tristyly::M())

iterate_stochastic(population, generations, G = Tristyly::G(),
  M = Tristyly::M())

replicate_to_dimorphism(N, times, G = Tristyly::G(), M = Tristyly::M(),
  verbose = FALSE)

iterate_to_dimorphism(population, times, G = Tristyly::G(),
  M = Tristyly::M(), verbose = FALSE)

iterate_to_monomorphism(population, times, G = Tristyly::G(),
  M = Tristyly::M(), verbose = FALSE)
}
\arguments{
\item{population}{See \code{\link{Mating}}.}

\item{generations}{the number of generations to iterate; the
initial population is generation 1.}

\item{tolerance}{Minimum between-generation absolute change in
genotype frequency for terminiation. Specify either
\code{generations} or \code{tolerance}.}

\item{G}{See \code{\link{G}()}.}

\item{M}{See \code{\link{M}()}.}

\item{N}{integer(1) Population size}

\item{times}{numeric(1) times to iterate the population to
monomorphism.}

\item{verbose}{missing or numeric(1) When present, report progress
every \code{verbose} iterations.}
}
\value{
a tibble (data.frame) summarizing morph frequencies in each
    generation, including the first (generation 1)

A \code{tibble} (data.frame) with columns \code{Generation}
    (generation of loss of first morph) and \code{Morph_lost}
    (morph lost). If two morphs are lost in the same generation,
    the value of \code{Morph} is \code{NA}.

A \code{tibble} (data.frame) with columns \code{Generation}
    (generation of loss of first morph) and \code{Morph_lost}
    (morph lost). If two morphs are lost in the same generation,
    the value of \code{Morph} is \code{NA}.

A \code{tibble} (data.frame) with columns \code{Generation}
    (generation until loss of two morphs) and \code{Morph_kept}
    (the morph remaining in the population).
}
\description{
Iteration
}
\section{Functions}{
\itemize{
\item \code{iterate_deterministic}: Deterministically iterate a single population
for a fixed number of generations, or until genotype frequences
change by less than a specified amount.

\item \code{iterate_stochastic}: Stochastically iterate a single population
for a fixed number of generations.

\item \code{replicate_to_dimorphism}: Iterate independent populations to loss of
one morph

\item \code{iterate_to_dimorphism}: Repeatedly iterate a population until loss of
one morph.

\item \code{iterate_to_monomorphism}: Repeatedly iterate a population until
monomorphism.
}}
\examples{
set.seed(1234L)
iterate_deterministic(isoplethy(4), 50)
tbl <- iterate_deterministic(isoplethy(4), , 1e-6)
plot_iterations(tbl)
tbl <- iterate_stochastic(isoplethy(30), 100)
tbl
tail(tbl)
di <- replicate_to_dimorphism(10, 100)
table(di$Morph_lost)
plot(ecdf(di$Generation), xlab="Generation")
population <- isoplethy(10)
morph_frequency(population)
di <- iterate_to_dimorphism(population, 100)
table(di$Morph_lost)
plot(ecdf(di$Generation), xlab="Generation")
population <- isoplethy(10)
morph_frequency(population)
mono <- iterate_to_monomorphism(population, 30)
table(mono$Morph_kept)
plot(ecdf(mono$Generation), xlab="Generation")
}

